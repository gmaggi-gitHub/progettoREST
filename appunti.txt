istruzioni x l'esame:
https://sites.google.com/diag.uniroma1.it/retidicalcolatori/esame



Tool riconosciuti come standard dalla community per la produzione di documentazione di API. Riporto quelli che a mio avviso sono i migliori:

Github Wikis
Slate
Swagger    https://swagger.io/
APIDOC ?  (menzionato dai requisiti)


Implementare un servizio REST per leggere i dati di un database MySQL, usando PHP per la generazione delle risposte HTTP (in formato JSON).
https://www.html.it/pag/374031/il-primo-servizio-rest/




bibliografia:

REST API: cosa sono, come funzionano e come progettarle
di Giuseppe Maggi
https://devacademy.it/rest-api-cosa-sono-come-funzionano-e-come-progettarle/

Cos'è un'API REST?
https://www.redhat.com/it/topics/api/what-is-a-rest-api

RESTful Web Services - La Guida
https://www.html.it/guide/restful-web-services-la-guida/

Cos'è l'API RESTful?
https://aws.amazon.com/it/what-is/restful-api/

Cos'è un'API REST?
https://www.ibm.com/it-it/cloud/learn/rest-apis

Una guida per principianti all'HTTP e REST
https://code.tutsplus.com/it/tutorials/a-beginners-guide-to-http-and-rest--net-16340

API Rest: cosa sono e perché usarle      letto
https://dinotraining.it/api-rest-cosa-sono-e-perche-usarle/

LINEE GUIDA PER IL DESIGN DI REST API
https://italiancoders.it/rest-web-api-linee-guida




WebSocket
https://it.wikipedia.org/wiki/WebSocket

https://mochajs.org/

https://docs.docker.com/get-started/

https://www.docker.com/101-tutorial/

https://www.docker.com/resources/what-container/

https://javascript.info/js

https://nodejs.org/en/

Kurose Ross chap.  7
Kurose Ross chap.  8

https://www.rabbitmq.com/download.html

https://www.instructables.com/Send-an-email-via-telnet/








=========================
Appunti docker:



installare docker come da istruzioni:


sudo apt-get update

sudo apt-get install  ca-certificates curl gnupg lsb-release

sudo mkdir -p /etc/apt/keyrings

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin





Enable BuildKit:
To enable docker BuildKit by default, set daemon configuration in /etc/docker/daemon.json feature to true and restart the daemon. If the daemon.json file doesn’t exist, create new file called daemon.json and then add the following to the file.

{
  "features":{"buildkit" : true}
}

Restart the Docker daemon

Sample application
Let’s create a simple Node.js application that we can use as our example. Create a directory in your local machine named node-docker and follow the steps below to create a simple REST API.
$ cd [path to your node-docker directory]
$ npm init -y
$ npm install ronin-server ronin-mocks
$ touch server.js

add the following code into the server.js file.

const ronin = require('ronin-server')
const mocks = require('ronin-mocks')
const server = ronin.server()
server.use('/', mocks.server(server.Router(), false, true))
server.start()

Test the application
Let’s start our application and make sure it’s running properly. Open your terminal and navigate to your working directory you created.
$ node server.js

To test that the application is working properly, we’ll first POST some JSON to the API and then make a GET request to see that the data has been saved. Open a new terminal and run the following curl commands:
$ curl --request POST \
  --url http://localhost:8000/test \
  --header 'content-type: application/json' \
  --data '{"msg": "testing" }'

$ curl http://localhost:8000/test
{"code":"success","meta":{"total":1,"count":1},"payload":[{"msg":"testing","id":"31f23305-f5d0-4b4f-a16f-6f4c8ec93cf1","createDate":"2020-08-28T21:53:07.157Z"}]}

where our server is running. You should now see the following requests in the server logs.

2020-XX-31T16:35:08:4260  INFO: POST /test
2020-XX-31T16:35:21:3560  INFO: GET /test

Create a Dockerfile for Node.js
Here’s the complete Dockerfile.

# syntax=docker/dockerfile:1
FROM node:12.18.1
ENV NODE_ENV=production
WORKDIR /app
COPY ["package.json", "package-lock.json*", "./"]
RUN npm install --production
COPY . .
CMD [ "node", "server.js" ]

Create a .dockerignore file
To improve the context load time create a .dockerignore file and add node_modules directory in it.

Build image
Let’s build our first Docker image.
$ docker build --tag node-docker .

To list images, simply run the images command.
$ docker images

Tag images
To create a new tag for the image we built above, run the following command.
$ docker tag node-docker:latest node-docker:v1.0.0

remove image
$ docker rmi node-docker:v1.0.0

Run your image as a container

Start the container and expose port 8000 to port 8000 on the host.
$ docker run --publish 8000:8000 node-docker

open a new terminal.
$ curl --request POST   --url http://localhost:8000/test   --header 'content-type: application/json'   --data '{"msg": "testing"}'

Switch back to the terminal where your container is running and you should see the POST request logged to the console.
2020-09-01T17:36:09:8770 INFO: POST /test

Run in detached mode or in the background
$ docker run -d -p 8000:8000 node-docker

List containers
Since we ran our container in the background, how do we know if our container is running or what other containers are running on our machine?
$ docker ps
$ docker ps --all   (anche in stato sospeso Exited)

stop the container
$ docker stop wonderful_kalam

Stop, start, and name containers
When we stop a container, it is not removed but the status is changed to stopped and the process inside of the container is stopped. When we ran the docker ps command, the default output is to only show running containers. If we pass the --all or -a for short, we will see all containers on our system whether they are stopped or started.
$ docker restart wonderful_kalam

let’s remove them
$ docker rm wonderful_kalam agitated_moser goofy_khayyam

To name a container, we just need to pass the --name flag to the run command
$ docker run -d -p 8000:8000 --name rest-server node-docker






========================================
Progetti scorsi:



https://github.com/TUEngineers/TravelUp            interessante

https://github.com/gianbus/rc-project              medio

https://github.com/StudentsHUBProject/StudentsHUB   medio

https://github.com/PaoloRipani/PhotograFinder/     incompleto?

https://github.com/tamerhayek00/progetto-reti	  AMQP usato per l'invio di una e-mail di conferma registrazione alla nostra applicazione

https://github.com/Linch1/W3Work                  non esiste

https://github.com/Uni-Progetti/EasyBooking       non esiste

https://github.com/mancini-michael/Socialify	 sembra il piu semplice

https://github.com/Cheroberous/test_progetto      essenziale

https://github.com/Infiniteez/progettorc         buon ReadMe

https://github.com/gianlucasbandi/MarcoPolo      usa maps

https://gitlab.com/uniroma3/compunet/security/laziochain-code    non esiste   una persona    goberti.1837004@studenti.uniroma1.it

https://github.com/saraalfano/ProgettoReti       vuoto

https://github.com/Zeplicious/Pho2Song           niente di che

https://github.com/dbPlain/dbPlain              usa Chart.js

https://gitlab.com/r3888/bookingn               buone Istruzioni per l'installazione

https://github.com/francescotedaldi/Oroscopo_RC     niente di che

https://github.com/SangueSpada/ItaliaInViaggioRDC     usa diveerse API esterne tra cui Maps

https://github.com/simonetablo/Progetto-RC.git     test  mocha - chai

https://github.com/lucianolazzari00/ProgettoRCLTW/     niente di che

https://github.com/chcola98/Progetto-Reti-di-Calcolatori       vuoto      una persona      colaizzi.1795759@studenti.uniroma1.it

https://github.com/edo9300/Progetto-reti-21-22            non esiste

https://github.com/confra/ProgettoRetiDiCalcolatori      sembra ben fatto forse lo guardo meglio

https://github.com/matteo-cutroni/progettordc          anche questo ben fatto 

https://github.com/imartin7/ProgettoReti.git          bho inglese               una persona   martinmateos.2036451@studenti.uniroma1.it

https://gitlab.com/jorgeperez2/retidicalcolatori-serviziorest   privato??     una persona   perezparedes.1989405@studenti.uniroma1.it	

https://github.com/RosapiaL/Progetto_RetiDiCalcolatori.git      sembra scarso dal ReadMe


